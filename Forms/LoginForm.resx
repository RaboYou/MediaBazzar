<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nsWuNdo9VgmtrxtMdcTOydxvDMcxCDwipY8iNzRHTtj0OOrZzwwb7bc1ttXJkjeXO0up4dosvR457e23
        8PRlDDMQpqXEAIKiKWWCHoj0bgXFrpA4N8tnr1jpetLR5tHE9Xpc+ow25omsT1/ZV25XxIG/glQbG+8J
        dvz3B2PrWjosm++zszxTRcvLzxssIxHM4FgKsWGwFJBt/wBtbd8//wBs5U4uDT17/eXfxGy5WySsqmxv
        ma+nhD9DdTo3tHjAtG9je+3bfl25z47TPMcD1+DFS2K1tp3nbd5svvxyaEUMDXwxWLDI+DotDHHcF7hf
        tPLdYp0sxyx2PerjhuPJ+ItO9u3aJ360dhOWK+Cshc6lnLYaqFznCNxGlkrSXDyWF1imO9bx1JOq4npc
        ultWLxvNexMcTstVZrH1Mcck0cwjN42l5jLWNaWlo3t4t/WVnUY7c3NEInA+IYKYOhvO0x6+bqwT8uVU
        DaGNroYGt6N0kkPRWj7i4i57tt/elJyWjl8mdV/TcOWdRM81pnfaJ363jyrl6vgroJJaWoa2Odup3Rkg
        DkTfu3XnHivF4mY7G/iPEtLn0t6VvG8wmOKOB1lRXiSCCWVng0TdTGFwuHSEi/fuPavefHa1t4hC4Frt
        Pp8E1y22ndduG9HLBhsUczHRPa6cljxpIvM8jbzEH1rfhrNaREuJxXLTLqr3pO8Ss62ucICAgICAgICA
        gICAgICAg4QcoOEBAsgWQLIOUHCMCMlkBAssBZZCyBZACDlAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBB/9k=
</value>
  </data>
</root>